{"ast":null,"code":"import React, { forwardRef, useRef, useState, useEffect } from \"react\";\nconst isArray = thing => Array.isArray(thing);\nconst asArray = value => {\n  return isArray(value) ? value : [value];\n};\nlet Queue = function (initialItems) {\n  let add = function (steps) {\n    asArray(steps).forEach(step => {\n      var _a;\n      return _q.set(Symbol((_a = step.char) == null ? void 0 : _a.innerText), buildQueueItem({\n        ...step\n      }));\n    });\n    return this;\n  };\n  let getTypeable = () => rawValues().filter(value => value.typeable);\n  let set = function (index, item) {\n    let keys = [..._q.keys()];\n    _q.set(keys[index], buildQueueItem(item));\n  };\n  let buildQueueItem = queueItem => {\n    queueItem.shouldPauseCursor = function () {\n      return Boolean(this.typeable || this.cursorable || this.deletable);\n    };\n    return queueItem;\n  };\n  let reset = function () {\n    _q.forEach(item => delete item.done);\n  };\n  let wipe = function () {\n    _q = /* @__PURE__ */new Map();\n    add(initialItems);\n  };\n  let getQueue = () => _q;\n  let rawValues = () => Array.from(_q.values());\n  let destroy = key => _q.delete(key);\n  let getItems = (all = false) => all ? rawValues() : rawValues().filter(i => !i.done);\n  let done = (key, shouldDestroy = false) => shouldDestroy ? _q.delete(key) : _q.get(key).done = true;\n  let _q = /* @__PURE__ */new Map();\n  add(initialItems);\n  return {\n    add,\n    set,\n    wipe,\n    reset,\n    destroy,\n    done,\n    getItems,\n    getQueue,\n    getTypeable\n  };\n};\nconst toArray = val => Array.from(val);\nconst createTextNode = content => document.createTextNode(content);\nlet expandTextNodes = element => {\n  [...element.childNodes].forEach(child => {\n    if (child.nodeValue) {\n      [...child.nodeValue].forEach(c => {\n        child.parentNode.insertBefore(createTextNode(c), child);\n      });\n      child.remove();\n      return;\n    }\n    expandTextNodes(child);\n  });\n  return element;\n};\nconst getParsedBody = content => {\n  let doc = document.implementation.createHTMLDocument();\n  doc.body.innerHTML = content;\n  return expandTextNodes(doc.body);\n};\nconst DATA_ATTRIBUTE = \"data-typeit-id\";\nconst CURSOR_CLASS = \"ti-cursor\";\nconst END = \"END\";\nconst DEFAULT_STATUSES = {\n  started: false,\n  completed: false,\n  frozen: false,\n  destroyed: false\n};\nconst DEFAULT_OPTIONS = {\n  breakLines: true,\n  cursor: {\n    autoPause: true,\n    autoPauseDelay: 500,\n    animation: {\n      frames: [0, 0, 1].map(n => {\n        return {\n          opacity: n\n        };\n      }),\n      options: {\n        iterations: Infinity,\n        easing: \"steps(2, start)\",\n        fill: \"forwards\"\n      }\n    }\n  },\n  cursorChar: \"|\",\n  cursorSpeed: 1e3,\n  deleteSpeed: null,\n  html: true,\n  lifeLike: true,\n  loop: false,\n  loopDelay: 750,\n  nextStringDelay: 750,\n  speed: 100,\n  startDelay: 250,\n  startDelete: false,\n  strings: [],\n  waitUntilVisible: false,\n  beforeString: () => {},\n  afterString: () => {},\n  beforeStep: () => {},\n  afterStep: () => {},\n  afterComplete: () => {}\n};\nconst PLACEHOLDER_CSS = `[${DATA_ATTRIBUTE}]:before {content: '.'; display: inline-block; width: 0; visibility: hidden;}`;\nfunction walkElementNodes(element, shouldReverse = false, shouldIncludeCursor = false) {\n  let cursor = element.querySelector(`.${CURSOR_CLASS}`);\n  let walker = document.createTreeWalker(element, NodeFilter.SHOW_ALL, {\n    acceptNode: node => {\n      var _a, _b;\n      if (cursor && shouldIncludeCursor) {\n        if ((_a = node.classList) == null ? void 0 : _a.contains(CURSOR_CLASS)) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n        if (cursor.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n      }\n      return ((_b = node.classList) == null ? void 0 : _b.contains(CURSOR_CLASS)) ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT;\n    }\n  });\n  let nextNode;\n  let nodes = [];\n  while (nextNode = walker.nextNode()) {\n    if (!nextNode.originalParent) {\n      nextNode.originalParent = nextNode.parentNode;\n    }\n    nodes.push(nextNode);\n  }\n  return shouldReverse ? nodes.reverse() : nodes;\n}\nfunction chunkStringAsHtml(string) {\n  return walkElementNodes(getParsedBody(string));\n}\nfunction maybeChunkStringAsHtml(str, asHtml = true) {\n  return asHtml ? chunkStringAsHtml(str) : toArray(str).map(createTextNode);\n}\nconst createElement = el => document.createElement(el);\nconst appendStyleBlock = (styles, id = \"\") => {\n  let styleBlock = createElement(\"style\");\n  styleBlock.id = id;\n  styleBlock.appendChild(createTextNode(styles));\n  document.head.appendChild(styleBlock);\n};\nconst calculateDelay = delayArg => {\n  if (!isArray(delayArg)) {\n    delayArg = [delayArg / 2, delayArg / 2];\n  }\n  return delayArg;\n};\nconst randomInRange = (value, range2) => {\n  return Math.abs(Math.random() * (value + range2 - (value - range2)) + (value - range2));\n};\nlet range = val => val / 2;\nfunction calculatePace(options) {\n  let {\n    speed,\n    deleteSpeed,\n    lifeLike\n  } = options;\n  deleteSpeed = deleteSpeed !== null ? deleteSpeed : speed / 3;\n  return lifeLike ? [randomInRange(speed, range(speed)), randomInRange(deleteSpeed, range(deleteSpeed))] : [speed, deleteSpeed];\n}\nconst destroyTimeouts = timeouts => {\n  timeouts.forEach(clearTimeout);\n  return [];\n};\nconst generateHash = () => Math.random().toString().substring(2, 9);\nconst isInput = el => \"value\" in el;\nlet getAllChars = element => {\n  if (isInput(element)) {\n    return toArray(element.value);\n  }\n  return walkElementNodes(element, true).filter(c => !(c.childNodes.length > 0));\n};\nconst fireWhenVisible = (element, func) => {\n  let observer = new IntersectionObserver((entries, observer2) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        func();\n        observer2.unobserve(element);\n      }\n    });\n  }, {\n    threshold: 1\n  });\n  observer.observe(element);\n};\nlet handleFunctionalArg = arg => {\n  return typeof arg === \"function\" ? arg() : arg;\n};\nconst isNumber = value => Number.isInteger(value);\nlet select = (selector, element = document, all = false) => {\n  return element[`querySelector${all ? \"All\" : \"\"}`](selector);\n};\nlet isBodyElement = node => /body/i.test(node == null ? void 0 : node.tagName);\nlet insertIntoElement = (originalTarget, character) => {\n  if (isInput(originalTarget)) {\n    originalTarget.value = `${originalTarget.value}${character.textContent}`;\n    return;\n  }\n  character.innerHTML = \"\";\n  let target = isBodyElement(character.originalParent) ? originalTarget : character.originalParent || originalTarget;\n  target.insertBefore(character, select(\".\" + CURSOR_CLASS, target) || null);\n};\nlet updateCursorPosition = (steps, cursorPosition, printedCharacters) => {\n  return Math.min(Math.max(cursorPosition + steps, 0), printedCharacters.length);\n};\nconst merge = (originalObj, newObj) => Object.assign({}, originalObj, newObj);\nconst removeNode = (node, rootElement) => {\n  if (!node) return;\n  let nodeParent = node.parentNode;\n  let nodeToRemove = nodeParent.childNodes.length > 1 || nodeParent.isSameNode(rootElement) ? node : nodeParent;\n  nodeToRemove.remove();\n};\nconst repositionCursor = (element, allChars, newCursorPosition) => {\n  let nodeToInsertBefore = allChars[newCursorPosition - 1];\n  let cursor = select(`.${CURSOR_CLASS}`, element);\n  element = (nodeToInsertBefore == null ? void 0 : nodeToInsertBefore.parentNode) || element;\n  element.insertBefore(cursor, nodeToInsertBefore || null);\n};\nfunction selectorToElement(thing) {\n  return typeof thing === \"string\" ? select(thing) : thing;\n}\nconst isNonVoidElement = el => /<(.+)>(.*?)<\\/(.+)>/.test(el.outerHTML);\nlet wait = (callback, delay, timeouts) => {\n  return new Promise(resolve => {\n    let cb = async () => {\n      await callback();\n      resolve();\n    };\n    timeouts.push(setTimeout(cb, delay || 0));\n  });\n};\nlet cursorFontStyles = {\n  \"font-family\": \"\",\n  \"font-weight\": \"\",\n  \"font-size\": \"\",\n  \"font-style\": \"\",\n  \"line-height\": \"\",\n  color: \"\",\n  transform: \"translateX(-.125em)\"\n};\nlet setCursorStyles = (id, element) => {\n  let rootSelector = `[${DATA_ATTRIBUTE}='${id}']`;\n  let cursorSelector = `${rootSelector} .${CURSOR_CLASS}`;\n  let computedStyles = getComputedStyle(element);\n  let customProperties = Object.entries(cursorFontStyles).reduce((accumulator, [item, value]) => {\n    return `${accumulator} ${item}: var(--ti-cursor-${item}, ${value || computedStyles[item]});`;\n  }, \"\");\n  appendStyleBlock(`${cursorSelector} { display: inline-block; width: 0; ${customProperties} }`, id);\n};\nconst duplicate = (value, times) => new Array(times).fill(value);\nconst countStepsToSelector = ({\n  queueItems,\n  selector,\n  cursorPosition,\n  to\n}) => {\n  if (isNumber(selector)) {\n    return selector * -1;\n  }\n  let isMovingToEnd = new RegExp(END, \"i\").test(to);\n  let selectorIndex = selector ? [...queueItems].reverse().findIndex(({\n    char\n  }) => {\n    let parentElement = char.parentElement;\n    let parentMatches = parentElement.matches(selector);\n    if (isMovingToEnd && parentMatches) {\n      return true;\n    }\n    return parentMatches && parentElement.firstChild.isSameNode(char);\n  }) : -1;\n  if (selectorIndex < 0) {\n    selectorIndex = isMovingToEnd ? 0 : queueItems.length - 1;\n  }\n  let offset = isMovingToEnd ? 0 : 1;\n  return selectorIndex - cursorPosition + offset;\n};\nlet beforePaint = cb => {\n  return new Promise(resolve => {\n    requestAnimationFrame(async () => {\n      resolve(await cb());\n    });\n  });\n};\nlet getAnimationFromElement = element => {\n  return element == null ? void 0 : element.getAnimations().find(animation => {\n    return animation.id === element.dataset.tiAnimationId;\n  });\n};\nlet setCursorAnimation = ({\n  cursor,\n  frames,\n  options\n}) => {\n  let animation = cursor.animate(frames, options);\n  animation.pause();\n  animation.id = cursor.dataset.tiAnimationId;\n  beforePaint(() => {\n    beforePaint(() => {\n      animation.play();\n    });\n  });\n  return animation;\n};\nlet rebuildCursorAnimation = ({\n  cursor,\n  options,\n  cursorOptions\n}) => {\n  if (!cursor || !cursorOptions) return;\n  let animation = getAnimationFromElement(cursor);\n  let oldCurrentTime;\n  if (animation) {\n    options.delay = animation.effect.getComputedTiming().delay;\n    oldCurrentTime = animation.currentTime;\n    animation.cancel();\n  }\n  let newAnimation = setCursorAnimation({\n    cursor,\n    frames: cursorOptions.animation.frames,\n    options\n  });\n  if (oldCurrentTime) {\n    newAnimation.currentTime = oldCurrentTime;\n  }\n  return newAnimation;\n};\nlet execute = queueItem => {\n  var _a;\n  return (_a = queueItem.func) == null ? void 0 : _a.call(null);\n};\nlet fireItem = async ({\n  index,\n  queueItems,\n  wait: wait2,\n  cursor,\n  cursorOptions\n}) => {\n  let queueItem = queueItems[index][1];\n  let instantQueue = [];\n  let tempIndex = index;\n  let futureItem = queueItem;\n  let shouldBeGrouped = () => futureItem && !futureItem.delay;\n  let shouldPauseCursor = queueItem.shouldPauseCursor() && cursorOptions.autoPause;\n  while (shouldBeGrouped()) {\n    instantQueue.push(futureItem);\n    shouldBeGrouped() && tempIndex++;\n    futureItem = queueItems[tempIndex] ? queueItems[tempIndex][1] : null;\n  }\n  if (instantQueue.length) {\n    await beforePaint(async () => {\n      for (let q of instantQueue) {\n        await execute(q);\n      }\n    });\n    return tempIndex - 1;\n  }\n  let animation = getAnimationFromElement(cursor);\n  let options;\n  if (animation) {\n    options = {\n      ...animation.effect.getComputedTiming(),\n      delay: shouldPauseCursor ? cursorOptions.autoPauseDelay : 0\n    };\n  }\n  await wait2(async () => {\n    if (animation && shouldPauseCursor) {\n      animation.cancel();\n    }\n    await beforePaint(() => {\n      execute(queueItem);\n    });\n  }, queueItem.delay);\n  await rebuildCursorAnimation({\n    cursor,\n    options,\n    cursorOptions\n  });\n  return index;\n};\nlet processCursorOptions = cursorOptions => {\n  var _a, _b;\n  if (typeof cursorOptions === \"object\") {\n    let newOptions = {};\n    let {\n      frames: defaultFrames,\n      options: defaultOptions\n    } = DEFAULT_OPTIONS.cursor.animation;\n    newOptions.animation = cursorOptions.animation || {};\n    newOptions.animation.frames = ((_a = cursorOptions.animation) == null ? void 0 : _a.frames) || defaultFrames;\n    newOptions.animation.options = merge(defaultOptions, ((_b = cursorOptions.animation) == null ? void 0 : _b.options) || {});\n    newOptions.autoPause = cursorOptions.autoPause ?? DEFAULT_OPTIONS.cursor.autoPause;\n    newOptions.autoPauseDelay = cursorOptions.autoPauseDelay || DEFAULT_OPTIONS.cursor.autoPauseDelay;\n    return newOptions;\n  }\n  if (cursorOptions === true) {\n    return DEFAULT_OPTIONS.cursor;\n  }\n  return cursorOptions;\n};\nconst TypeIt$1 = function (element, options = {}) {\n  let _wait = async (callback, delay, silent = false) => {\n    if (_statuses.frozen) {\n      await new Promise(resolve => {\n        this.unfreeze = () => {\n          _statuses.frozen = false;\n          resolve();\n        };\n      });\n    }\n    silent || (await _opts.beforeStep(this));\n    await wait(callback, delay, _timeouts);\n    silent || (await _opts.afterStep(this));\n  };\n  let _fireItemWithContext = (index, queueItems) => {\n    return fireItem({\n      index,\n      queueItems,\n      wait: _wait,\n      cursor: _cursor,\n      cursorOptions: _opts.cursor\n    });\n  };\n  let _removeNode = node => removeNode(node, _element);\n  let _elementIsInput = () => isInput(_element);\n  let _getPace = (index = 0) => calculatePace(_opts)[index];\n  let _getAllChars = () => getAllChars(_element);\n  let _maybeAppendPause = (opts = {}) => {\n    let delay = opts.delay;\n    delay && _queue.add({\n      delay\n    });\n  };\n  let _queueAndReturn = (steps, opts) => {\n    _queue.add(steps);\n    _maybeAppendPause(opts);\n    return this;\n  };\n  let _getDerivedCursorPosition = () => _predictedCursorPosition ?? _cursorPosition;\n  let _generateTemporaryOptionQueueItems = (newOptions = {}) => {\n    return [{\n      func: () => _options(newOptions)\n    }, {\n      func: () => _options(_opts)\n    }];\n  };\n  let _addSplitPause = items => {\n    let delay = _opts.nextStringDelay;\n    _queue.add([{\n      delay: delay[0]\n    }, ...items, {\n      delay: delay[1]\n    }]);\n  };\n  let _setUpCursor = () => {\n    if (_elementIsInput()) {\n      return;\n    }\n    let cursor = createElement(\"span\");\n    cursor.className = CURSOR_CLASS;\n    if (!_shouldRenderCursor) {\n      cursor.style.visibility = \"hidden\";\n      return cursor;\n    }\n    cursor.innerHTML = getParsedBody(_opts.cursorChar).innerHTML;\n    return cursor;\n  };\n  let _attachCursor = async () => {\n    !_elementIsInput() && _cursor && _element.appendChild(_cursor);\n    if (_shouldRenderCursor) {\n      setCursorStyles(_id, _element);\n      _cursor.dataset.tiAnimationId = _id;\n      let {\n        animation\n      } = _opts.cursor;\n      let {\n        frames,\n        options: options2\n      } = animation;\n      setCursorAnimation({\n        frames,\n        cursor: _cursor,\n        options: {\n          duration: _opts.cursorSpeed,\n          ...options2\n        }\n      });\n    }\n  };\n  let _generateQueue = () => {\n    let strings = _opts.strings.filter(string => !!string);\n    strings.forEach((string, index) => {\n      this.type(string);\n      if (index + 1 === strings.length) {\n        return;\n      }\n      let splitItems = _opts.breakLines ? [{\n        func: () => _type(createElement(\"BR\")),\n        typeable: true\n      }] : duplicate({\n        func: _delete,\n        delay: _getPace(1)\n      }, _queue.getTypeable().length);\n      _addSplitPause(splitItems);\n    });\n  };\n  let _prepLoop = async delay => {\n    let derivedCursorPosition = _getDerivedCursorPosition();\n    derivedCursorPosition && (await _move({\n      value: derivedCursorPosition\n    }));\n    let queueItems = _getAllChars().map(c => {\n      return [Symbol(), {\n        func: _delete,\n        delay: _getPace(1),\n        deletable: true,\n        shouldPauseCursor: () => true\n      }];\n    });\n    for (let index = 0; index < queueItems.length; index++) {\n      await _fireItemWithContext(index, queueItems);\n    }\n    _queue.reset();\n    _queue.set(0, {\n      delay\n    });\n  };\n  let _maybePrependHardcodedStrings = strings => {\n    let existingMarkup = _element.innerHTML;\n    if (!existingMarkup) {\n      return strings;\n    }\n    _element.innerHTML = \"\";\n    if (_opts.startDelete) {\n      _element.innerHTML = existingMarkup;\n      expandTextNodes(_element);\n      _addSplitPause(duplicate({\n        func: _delete,\n        delay: _getPace(1),\n        deletable: true\n      }, _getAllChars().length));\n      return strings;\n    }\n    let hardCodedStrings = existingMarkup.replace(/<!--(.+?)-->/g, \"\").trim().split(/<br(?:\\s*?)(?:\\/)?>/);\n    return hardCodedStrings.concat(strings);\n  };\n  let _fire = async (remember = true) => {\n    _statuses.started = true;\n    let cleanUp = qKey => {\n      _queue.done(qKey, !remember);\n    };\n    try {\n      let queueItems = [..._queue.getQueue()];\n      for (let index = 0; index < queueItems.length; index++) {\n        let [queueKey, queueItem] = queueItems[index];\n        if (queueItem.done) continue;\n        if (!queueItem.deletable || queueItem.deletable && _getAllChars().length) {\n          let newIndex = await _fireItemWithContext(index, queueItems);\n          Array(newIndex - index).fill(index + 1).map((x, y) => x + y).forEach(i => {\n            let [key] = queueItems[i];\n            cleanUp(key);\n          });\n          index = newIndex;\n        }\n        cleanUp(queueKey);\n      }\n      if (!remember) {\n        return this;\n      }\n      _statuses.completed = true;\n      await _opts.afterComplete(this);\n      if (!_opts.loop) {\n        throw \"\";\n      }\n      let delay = _opts.loopDelay;\n      _wait(async () => {\n        await _prepLoop(delay[0]);\n        _fire();\n      }, delay[1]);\n    } catch (e) {}\n    return this;\n  };\n  let _move = async step => {\n    _cursorPosition = updateCursorPosition(step, _cursorPosition, _getAllChars());\n    repositionCursor(_element, _getAllChars(), _cursorPosition);\n  };\n  let _type = char => insertIntoElement(_element, char);\n  let _options = async opts => _opts = merge(_opts, opts);\n  let _empty = async () => {\n    if (_elementIsInput()) {\n      _element.value = \"\";\n      return;\n    }\n    _getAllChars().forEach(_removeNode);\n    return;\n  };\n  let _delete = () => {\n    let allChars = _getAllChars();\n    if (!allChars.length) return;\n    if (_elementIsInput()) {\n      _element.value = _element.value.slice(0, -1);\n    } else {\n      _removeNode(allChars[_cursorPosition]);\n    }\n  };\n  this.break = function (actionOpts) {\n    return _queueAndReturn({\n      func: () => _type(createElement(\"BR\")),\n      typeable: true\n    }, actionOpts);\n  };\n  this.delete = function (numCharacters = null, actionOpts = {}) {\n    numCharacters = handleFunctionalArg(numCharacters);\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let num = numCharacters;\n    let {\n      instant,\n      to\n    } = actionOpts;\n    let typeableQueueItems = _queue.getTypeable();\n    let rounds = (() => {\n      if (num === null) {\n        return typeableQueueItems.length;\n      }\n      if (isNumber(num)) {\n        return num;\n      }\n      return countStepsToSelector({\n        queueItems: typeableQueueItems,\n        selector: num,\n        cursorPosition: _getDerivedCursorPosition(),\n        to\n      });\n    })();\n    return _queueAndReturn([bookEndQueueItems[0], ...duplicate({\n      func: _delete,\n      delay: instant ? 0 : _getPace(1),\n      deletable: true\n    }, rounds), bookEndQueueItems[1]], actionOpts);\n  };\n  this.empty = function (actionOpts = {}) {\n    return _queueAndReturn({\n      func: _empty\n    }, actionOpts);\n  };\n  this.exec = function (func, actionOpts = {}) {\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    return _queueAndReturn([bookEndQueueItems[0], {\n      func: () => func(this)\n    }, bookEndQueueItems[1]], actionOpts);\n  };\n  this.move = function (movementArg, actionOpts = {}) {\n    movementArg = handleFunctionalArg(movementArg);\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let {\n      instant,\n      to\n    } = actionOpts;\n    let numberOfSteps = countStepsToSelector({\n      queueItems: _queue.getTypeable(),\n      selector: movementArg === null ? \"\" : movementArg,\n      to,\n      cursorPosition: _getDerivedCursorPosition()\n    });\n    let directionalStep = numberOfSteps < 0 ? -1 : 1;\n    _predictedCursorPosition = _getDerivedCursorPosition() + numberOfSteps;\n    return _queueAndReturn([bookEndQueueItems[0], ...duplicate({\n      func: () => _move(directionalStep),\n      delay: instant ? 0 : _getPace(),\n      cursorable: true\n    }, Math.abs(numberOfSteps)), bookEndQueueItems[1]], actionOpts);\n  };\n  this.options = function (opts, actionOpts = {}) {\n    opts = handleFunctionalArg(opts);\n    _options(opts);\n    return _queueAndReturn({}, actionOpts);\n  };\n  this.pause = function (milliseconds, actionOpts = {}) {\n    return _queueAndReturn({\n      delay: handleFunctionalArg(milliseconds)\n    }, actionOpts);\n  };\n  this.type = function (string, actionOpts = {}) {\n    string = handleFunctionalArg(string);\n    let {\n      instant\n    } = actionOpts;\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let chars = maybeChunkStringAsHtml(string, _opts.html);\n    let charsAsQueueItems = chars.map(char => {\n      return {\n        func: () => _type(char),\n        char,\n        delay: instant || isNonVoidElement(char) ? 0 : _getPace(),\n        typeable: char.nodeType === Node.TEXT_NODE\n      };\n    });\n    let itemsToQueue = [bookEndQueueItems[0], {\n      func: async () => await _opts.beforeString(string, this)\n    }, ...charsAsQueueItems, {\n      func: async () => await _opts.afterString(string, this)\n    }, bookEndQueueItems[1]];\n    return _queueAndReturn(itemsToQueue, actionOpts);\n  };\n  this.is = function (key) {\n    return _statuses[key];\n  };\n  this.destroy = function (shouldRemoveCursor = true) {\n    _timeouts = destroyTimeouts(_timeouts);\n    handleFunctionalArg(shouldRemoveCursor) && _cursor && _removeNode(_cursor);\n    _statuses.destroyed = true;\n  };\n  this.freeze = function () {\n    _statuses.frozen = true;\n  };\n  this.unfreeze = () => {};\n  this.reset = function (rebuild) {\n    !this.is(\"destroyed\") && this.destroy();\n    if (rebuild) {\n      _queue.wipe();\n      rebuild(this);\n    } else {\n      _queue.reset();\n    }\n    _cursorPosition = 0;\n    for (let property in _statuses) {\n      _statuses[property] = false;\n    }\n    _element[_elementIsInput() ? \"value\" : \"innerHTML\"] = \"\";\n    return this;\n  };\n  this.go = function () {\n    if (_statuses.started) {\n      return this;\n    }\n    _attachCursor();\n    if (!_opts.waitUntilVisible) {\n      _fire();\n      return this;\n    }\n    fireWhenVisible(_element, _fire.bind(this));\n    return this;\n  };\n  this.flush = function (cb = () => {}) {\n    _attachCursor();\n    _fire(false).then(cb);\n    return this;\n  };\n  this.getQueue = () => _queue;\n  this.getOptions = () => _opts;\n  this.updateOptions = options2 => _options(options2);\n  this.getElement = () => _element;\n  let _element = selectorToElement(element);\n  let _timeouts = [];\n  let _cursorPosition = 0;\n  let _predictedCursorPosition = null;\n  let _statuses = merge({}, DEFAULT_STATUSES);\n  options.cursor = processCursorOptions(options.cursor ?? DEFAULT_OPTIONS.cursor);\n  let _opts = merge(DEFAULT_OPTIONS, options);\n  _opts = merge(_opts, {\n    html: !_elementIsInput() && _opts.html,\n    nextStringDelay: calculateDelay(_opts.nextStringDelay),\n    loopDelay: calculateDelay(_opts.loopDelay)\n  });\n  let _id = generateHash();\n  let _queue = Queue([{\n    delay: _opts.startDelay\n  }]);\n  _element.dataset.typeitId = _id;\n  appendStyleBlock(PLACEHOLDER_CSS);\n  let _shouldRenderCursor = !!_opts.cursor && !_elementIsInput();\n  let _cursor = _setUpCursor();\n  _opts.strings = _maybePrependHardcodedStrings(asArray(_opts.strings));\n  if (_opts.strings.length) {\n    _generateQueue();\n  }\n};\nconst defaultProps = {\n  as: \"span\",\n  options: {},\n  getBeforeInit: instance => instance,\n  getAfterInit: instance => instance\n};\nconst DynamicElementComponent = forwardRef((props, ref) => {\n  const {\n    as: As\n  } = props;\n  return /* @__PURE__ */React.createElement(As, {\n    ref,\n    ...props\n  });\n});\nconst TypeIt = props => {\n  const elementRef = useRef(null);\n  const instanceRef = useRef(null);\n  const {\n    options,\n    children,\n    getBeforeInit,\n    getAfterInit,\n    ...remainingProps\n  } = props;\n  const [shouldShowChildren, setShouldShowChildren] = useState(true);\n  const [instanceOptions, setInstanceOptions] = useState(null);\n  function calculateOptions() {\n    const optionsClone = Object.assign({}, options);\n    if (children && elementRef.current) {\n      optionsClone.strings = elementRef.current.innerHTML;\n    }\n    setInstanceOptions(optionsClone);\n  }\n  function generateNewInstance() {\n    instanceRef.current = new TypeIt$1(elementRef.current, instanceOptions);\n    instanceRef.current = getBeforeInit(instanceRef.current);\n    instanceRef.current.go();\n    instanceRef.current = getAfterInit(instanceRef.current);\n  }\n  useEffect(() => {\n    calculateOptions();\n    setShouldShowChildren(false);\n  }, [options]);\n  useEffect(() => {\n    var _a;\n    if (!instanceOptions) return;\n    ((_a = instanceRef.current) == null ? void 0 : _a.updateOptions(instanceOptions)) || generateNewInstance();\n  }, [instanceOptions]);\n  useEffect(() => {\n    return () => {\n      var _a;\n      return (_a = instanceRef.current) == null ? void 0 : _a.destroy();\n    };\n  }, []);\n  return /* @__PURE__ */React.createElement(DynamicElementComponent, {\n    ref: elementRef,\n    children: shouldShowChildren ? children : null,\n    style: {\n      opacity: shouldShowChildren ? 0 : 1\n    },\n    ...remainingProps\n  });\n};\nTypeIt.defaultProps = defaultProps;\nexport { TypeIt as default };","map":{"version":3,"names":["React","forwardRef","useRef","useState","useEffect","isArray","thing","Array","asArray","value","Queue","initialItems","add","steps","forEach","step","_a","_q","set","Symbol","char","innerText","buildQueueItem","getTypeable","rawValues","filter","typeable","index","item","keys","queueItem","shouldPauseCursor","Boolean","cursorable","deletable","reset","done","wipe","Map","getQueue","from","values","destroy","key","delete","getItems","all","i","shouldDestroy","get","toArray","val","createTextNode","content","document","expandTextNodes","element","childNodes","child","nodeValue","c","parentNode","insertBefore","remove","getParsedBody","doc","implementation","createHTMLDocument","body","innerHTML","DATA_ATTRIBUTE","CURSOR_CLASS","END","DEFAULT_STATUSES","started","completed","frozen","destroyed","DEFAULT_OPTIONS","breakLines","cursor","autoPause","autoPauseDelay","animation","frames","map","n","opacity","options","iterations","Infinity","easing","fill","cursorChar","cursorSpeed","deleteSpeed","html","lifeLike","loop","loopDelay","nextStringDelay","speed","startDelay","startDelete","strings","waitUntilVisible","beforeString","afterString","beforeStep","afterStep","afterComplete","PLACEHOLDER_CSS","walkElementNodes","shouldReverse","shouldIncludeCursor","querySelector","walker","createTreeWalker","NodeFilter","SHOW_ALL","acceptNode","node","_b","classList","contains","FILTER_ACCEPT","FILTER_REJECT","nextNode","nodes","originalParent","push","reverse","chunkStringAsHtml","string","maybeChunkStringAsHtml","str","asHtml","createElement","el","appendStyleBlock","styles","id","styleBlock","appendChild","head","calculateDelay","delayArg","randomInRange","range2","Math","abs","random","range","calculatePace","destroyTimeouts","timeouts","clearTimeout","generateHash","toString","substring","isInput","getAllChars","length","fireWhenVisible","func","observer","IntersectionObserver","entries","observer2","entry","isIntersecting","unobserve","threshold","observe","handleFunctionalArg","arg","isNumber","Number","isInteger","select","selector","isBodyElement","test","tagName","insertIntoElement","originalTarget","character","textContent","target","updateCursorPosition","cursorPosition","printedCharacters","min","max","merge","originalObj","newObj","Object","assign","removeNode","rootElement","nodeParent","nodeToRemove","isSameNode","repositionCursor","allChars","newCursorPosition","nodeToInsertBefore","selectorToElement","isNonVoidElement","outerHTML","wait","callback","delay","Promise","resolve","cb","setTimeout","cursorFontStyles","color","transform","setCursorStyles","rootSelector","cursorSelector","computedStyles","getComputedStyle","customProperties","reduce","accumulator","duplicate","times","countStepsToSelector","queueItems","to","isMovingToEnd","RegExp","selectorIndex","findIndex","parentElement","parentMatches","matches","firstChild","offset","beforePaint","requestAnimationFrame","getAnimationFromElement","getAnimations","find","dataset","tiAnimationId","setCursorAnimation","animate","pause","play","rebuildCursorAnimation","cursorOptions","oldCurrentTime","effect","getComputedTiming","currentTime","cancel","newAnimation","execute","call","fireItem","wait2","instantQueue","tempIndex","futureItem","shouldBeGrouped","q","processCursorOptions","newOptions","defaultFrames","defaultOptions","TypeIt$1","_wait","silent","_statuses","unfreeze","_opts","_timeouts","_fireItemWithContext","_cursor","_removeNode","_element","_elementIsInput","_getPace","_getAllChars","_maybeAppendPause","opts","_queue","_queueAndReturn","_getDerivedCursorPosition","_predictedCursorPosition","_cursorPosition","_generateTemporaryOptionQueueItems","_options","_addSplitPause","items","_setUpCursor","className","_shouldRenderCursor","style","visibility","_attachCursor","_id","options2","duration","_generateQueue","type","splitItems","_type","_delete","_prepLoop","derivedCursorPosition","_move","_maybePrependHardcodedStrings","existingMarkup","hardCodedStrings","replace","trim","split","concat","_fire","remember","cleanUp","qKey","queueKey","newIndex","x","y","e","_empty","slice","break","actionOpts","numCharacters","bookEndQueueItems","num","instant","typeableQueueItems","rounds","empty","exec","move","movementArg","numberOfSteps","directionalStep","milliseconds","chars","charsAsQueueItems","nodeType","Node","TEXT_NODE","itemsToQueue","is","shouldRemoveCursor","freeze","rebuild","property","go","bind","flush","then","getOptions","updateOptions","getElement","typeitId","defaultProps","as","getBeforeInit","instance","getAfterInit","DynamicElementComponent","props","ref","As","TypeIt","elementRef","instanceRef","children","remainingProps","shouldShowChildren","setShouldShowChildren","instanceOptions","setInstanceOptions","calculateOptions","optionsClone","current","generateNewInstance","default"],"sources":["/Users/btodd/Repos/90Portfolio/my-app/node_modules/typeit-react/dist/index.es.js"],"sourcesContent":["import React, { forwardRef, useRef, useState, useEffect } from \"react\";\nconst isArray = (thing) => Array.isArray(thing);\nconst asArray = (value) => {\n  return isArray(value) ? value : [value];\n};\nlet Queue = function(initialItems) {\n  let add = function(steps) {\n    asArray(steps).forEach((step) => {\n      var _a;\n      return _q.set(Symbol((_a = step.char) == null ? void 0 : _a.innerText), buildQueueItem({ ...step }));\n    });\n    return this;\n  };\n  let getTypeable = () => rawValues().filter((value) => value.typeable);\n  let set = function(index, item) {\n    let keys = [..._q.keys()];\n    _q.set(keys[index], buildQueueItem(item));\n  };\n  let buildQueueItem = (queueItem) => {\n    queueItem.shouldPauseCursor = function() {\n      return Boolean(this.typeable || this.cursorable || this.deletable);\n    };\n    return queueItem;\n  };\n  let reset = function() {\n    _q.forEach((item) => delete item.done);\n  };\n  let wipe = function() {\n    _q = /* @__PURE__ */ new Map();\n    add(initialItems);\n  };\n  let getQueue = () => _q;\n  let rawValues = () => Array.from(_q.values());\n  let destroy = (key) => _q.delete(key);\n  let getItems = (all = false) => all ? rawValues() : rawValues().filter((i) => !i.done);\n  let done = (key, shouldDestroy = false) => shouldDestroy ? _q.delete(key) : _q.get(key).done = true;\n  let _q = /* @__PURE__ */ new Map();\n  add(initialItems);\n  return {\n    add,\n    set,\n    wipe,\n    reset,\n    destroy,\n    done,\n    getItems,\n    getQueue,\n    getTypeable\n  };\n};\nconst toArray = (val) => Array.from(val);\nconst createTextNode = (content) => document.createTextNode(content);\nlet expandTextNodes = (element) => {\n  [...element.childNodes].forEach((child) => {\n    if (child.nodeValue) {\n      [...child.nodeValue].forEach((c) => {\n        child.parentNode.insertBefore(createTextNode(c), child);\n      });\n      child.remove();\n      return;\n    }\n    expandTextNodes(child);\n  });\n  return element;\n};\nconst getParsedBody = (content) => {\n  let doc = document.implementation.createHTMLDocument();\n  doc.body.innerHTML = content;\n  return expandTextNodes(doc.body);\n};\nconst DATA_ATTRIBUTE = \"data-typeit-id\";\nconst CURSOR_CLASS = \"ti-cursor\";\nconst END = \"END\";\nconst DEFAULT_STATUSES = {\n  started: false,\n  completed: false,\n  frozen: false,\n  destroyed: false\n};\nconst DEFAULT_OPTIONS = {\n  breakLines: true,\n  cursor: {\n    autoPause: true,\n    autoPauseDelay: 500,\n    animation: {\n      frames: [0, 0, 1].map((n) => {\n        return { opacity: n };\n      }),\n      options: {\n        iterations: Infinity,\n        easing: \"steps(2, start)\",\n        fill: \"forwards\"\n      }\n    }\n  },\n  cursorChar: \"|\",\n  cursorSpeed: 1e3,\n  deleteSpeed: null,\n  html: true,\n  lifeLike: true,\n  loop: false,\n  loopDelay: 750,\n  nextStringDelay: 750,\n  speed: 100,\n  startDelay: 250,\n  startDelete: false,\n  strings: [],\n  waitUntilVisible: false,\n  beforeString: () => {\n  },\n  afterString: () => {\n  },\n  beforeStep: () => {\n  },\n  afterStep: () => {\n  },\n  afterComplete: () => {\n  }\n};\nconst PLACEHOLDER_CSS = `[${DATA_ATTRIBUTE}]:before {content: '.'; display: inline-block; width: 0; visibility: hidden;}`;\nfunction walkElementNodes(element, shouldReverse = false, shouldIncludeCursor = false) {\n  let cursor = element.querySelector(`.${CURSOR_CLASS}`);\n  let walker = document.createTreeWalker(element, NodeFilter.SHOW_ALL, {\n    acceptNode: (node) => {\n      var _a, _b;\n      if (cursor && shouldIncludeCursor) {\n        if ((_a = node.classList) == null ? void 0 : _a.contains(CURSOR_CLASS)) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n        if (cursor.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n      }\n      return ((_b = node.classList) == null ? void 0 : _b.contains(CURSOR_CLASS)) ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT;\n    }\n  });\n  let nextNode;\n  let nodes = [];\n  while (nextNode = walker.nextNode()) {\n    if (!nextNode.originalParent) {\n      nextNode.originalParent = nextNode.parentNode;\n    }\n    nodes.push(nextNode);\n  }\n  return shouldReverse ? nodes.reverse() : nodes;\n}\nfunction chunkStringAsHtml(string) {\n  return walkElementNodes(getParsedBody(string));\n}\nfunction maybeChunkStringAsHtml(str, asHtml = true) {\n  return asHtml ? chunkStringAsHtml(str) : toArray(str).map(createTextNode);\n}\nconst createElement = (el) => document.createElement(el);\nconst appendStyleBlock = (styles, id = \"\") => {\n  let styleBlock = createElement(\"style\");\n  styleBlock.id = id;\n  styleBlock.appendChild(createTextNode(styles));\n  document.head.appendChild(styleBlock);\n};\nconst calculateDelay = (delayArg) => {\n  if (!isArray(delayArg)) {\n    delayArg = [delayArg / 2, delayArg / 2];\n  }\n  return delayArg;\n};\nconst randomInRange = (value, range2) => {\n  return Math.abs(\n    Math.random() * (value + range2 - (value - range2)) + (value - range2)\n  );\n};\nlet range = (val) => val / 2;\nfunction calculatePace(options) {\n  let { speed, deleteSpeed, lifeLike } = options;\n  deleteSpeed = deleteSpeed !== null ? deleteSpeed : speed / 3;\n  return lifeLike ? [\n    randomInRange(speed, range(speed)),\n    randomInRange(deleteSpeed, range(deleteSpeed))\n  ] : [speed, deleteSpeed];\n}\nconst destroyTimeouts = (timeouts) => {\n  timeouts.forEach(clearTimeout);\n  return [];\n};\nconst generateHash = () => Math.random().toString().substring(2, 9);\nconst isInput = (el) => \"value\" in el;\nlet getAllChars = (element) => {\n  if (isInput(element)) {\n    return toArray(element.value);\n  }\n  return walkElementNodes(element, true).filter(\n    (c) => !(c.childNodes.length > 0)\n  );\n};\nconst fireWhenVisible = (element, func) => {\n  let observer = new IntersectionObserver(\n    (entries, observer2) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          func();\n          observer2.unobserve(element);\n        }\n      });\n    },\n    { threshold: 1 }\n  );\n  observer.observe(element);\n};\nlet handleFunctionalArg = (arg) => {\n  return typeof arg === \"function\" ? arg() : arg;\n};\nconst isNumber = (value) => Number.isInteger(value);\nlet select = (selector, element = document, all = false) => {\n  return element[`querySelector${all ? \"All\" : \"\"}`](selector);\n};\nlet isBodyElement = (node) => /body/i.test(node == null ? void 0 : node.tagName);\nlet insertIntoElement = (originalTarget, character) => {\n  if (isInput(originalTarget)) {\n    originalTarget.value = `${originalTarget.value}${character.textContent}`;\n    return;\n  }\n  character.innerHTML = \"\";\n  let target = isBodyElement(character.originalParent) ? originalTarget : character.originalParent || originalTarget;\n  target.insertBefore(\n    character,\n    select(\".\" + CURSOR_CLASS, target) || null\n  );\n};\nlet updateCursorPosition = (steps, cursorPosition, printedCharacters) => {\n  return Math.min(\n    Math.max(cursorPosition + steps, 0),\n    printedCharacters.length\n  );\n};\nconst merge = (originalObj, newObj) => Object.assign({}, originalObj, newObj);\nconst removeNode = (node, rootElement) => {\n  if (!node)\n    return;\n  let nodeParent = node.parentNode;\n  let nodeToRemove = nodeParent.childNodes.length > 1 || nodeParent.isSameNode(rootElement) ? node : nodeParent;\n  nodeToRemove.remove();\n};\nconst repositionCursor = (element, allChars, newCursorPosition) => {\n  let nodeToInsertBefore = allChars[newCursorPosition - 1];\n  let cursor = select(`.${CURSOR_CLASS}`, element);\n  element = (nodeToInsertBefore == null ? void 0 : nodeToInsertBefore.parentNode) || element;\n  element.insertBefore(cursor, nodeToInsertBefore || null);\n};\nfunction selectorToElement(thing) {\n  return typeof thing === \"string\" ? select(thing) : thing;\n}\nconst isNonVoidElement = (el) => /<(.+)>(.*?)<\\/(.+)>/.test(el.outerHTML);\nlet wait = (callback, delay, timeouts) => {\n  return new Promise((resolve) => {\n    let cb = async () => {\n      await callback();\n      resolve();\n    };\n    timeouts.push(setTimeout(cb, delay || 0));\n  });\n};\nlet cursorFontStyles = {\n  \"font-family\": \"\",\n  \"font-weight\": \"\",\n  \"font-size\": \"\",\n  \"font-style\": \"\",\n  \"line-height\": \"\",\n  color: \"\",\n  transform: \"translateX(-.125em)\"\n};\nlet setCursorStyles = (id, element) => {\n  let rootSelector = `[${DATA_ATTRIBUTE}='${id}']`;\n  let cursorSelector = `${rootSelector} .${CURSOR_CLASS}`;\n  let computedStyles = getComputedStyle(element);\n  let customProperties = Object.entries(cursorFontStyles).reduce(\n    (accumulator, [item, value]) => {\n      return `${accumulator} ${item}: var(--ti-cursor-${item}, ${value || computedStyles[item]});`;\n    },\n    \"\"\n  );\n  appendStyleBlock(\n    `${cursorSelector} { display: inline-block; width: 0; ${customProperties} }`,\n    id\n  );\n};\nconst duplicate = (value, times) => new Array(times).fill(value);\nconst countStepsToSelector = ({\n  queueItems,\n  selector,\n  cursorPosition,\n  to\n}) => {\n  if (isNumber(selector)) {\n    return selector * -1;\n  }\n  let isMovingToEnd = new RegExp(END, \"i\").test(to);\n  let selectorIndex = selector ? [...queueItems].reverse().findIndex(({ char }) => {\n    let parentElement = char.parentElement;\n    let parentMatches = parentElement.matches(selector);\n    if (isMovingToEnd && parentMatches) {\n      return true;\n    }\n    return parentMatches && parentElement.firstChild.isSameNode(char);\n  }) : -1;\n  if (selectorIndex < 0) {\n    selectorIndex = isMovingToEnd ? 0 : queueItems.length - 1;\n  }\n  let offset = isMovingToEnd ? 0 : 1;\n  return selectorIndex - cursorPosition + offset;\n};\nlet beforePaint = (cb) => {\n  return new Promise((resolve) => {\n    requestAnimationFrame(async () => {\n      resolve(await cb());\n    });\n  });\n};\nlet getAnimationFromElement = (element) => {\n  return element == null ? void 0 : element.getAnimations().find((animation) => {\n    return animation.id === element.dataset.tiAnimationId;\n  });\n};\nlet setCursorAnimation = ({\n  cursor,\n  frames,\n  options\n}) => {\n  let animation = cursor.animate(frames, options);\n  animation.pause();\n  animation.id = cursor.dataset.tiAnimationId;\n  beforePaint(() => {\n    beforePaint(() => {\n      animation.play();\n    });\n  });\n  return animation;\n};\nlet rebuildCursorAnimation = ({\n  cursor,\n  options,\n  cursorOptions\n}) => {\n  if (!cursor || !cursorOptions)\n    return;\n  let animation = getAnimationFromElement(cursor);\n  let oldCurrentTime;\n  if (animation) {\n    options.delay = animation.effect.getComputedTiming().delay;\n    oldCurrentTime = animation.currentTime;\n    animation.cancel();\n  }\n  let newAnimation = setCursorAnimation({\n    cursor,\n    frames: cursorOptions.animation.frames,\n    options\n  });\n  if (oldCurrentTime) {\n    newAnimation.currentTime = oldCurrentTime;\n  }\n  return newAnimation;\n};\nlet execute = (queueItem) => {\n  var _a;\n  return (_a = queueItem.func) == null ? void 0 : _a.call(null);\n};\nlet fireItem = async ({\n  index,\n  queueItems,\n  wait: wait2,\n  cursor,\n  cursorOptions\n}) => {\n  let queueItem = queueItems[index][1];\n  let instantQueue = [];\n  let tempIndex = index;\n  let futureItem = queueItem;\n  let shouldBeGrouped = () => futureItem && !futureItem.delay;\n  let shouldPauseCursor = queueItem.shouldPauseCursor() && cursorOptions.autoPause;\n  while (shouldBeGrouped()) {\n    instantQueue.push(futureItem);\n    shouldBeGrouped() && tempIndex++;\n    futureItem = queueItems[tempIndex] ? queueItems[tempIndex][1] : null;\n  }\n  if (instantQueue.length) {\n    await beforePaint(async () => {\n      for (let q of instantQueue) {\n        await execute(q);\n      }\n    });\n    return tempIndex - 1;\n  }\n  let animation = getAnimationFromElement(cursor);\n  let options;\n  if (animation) {\n    options = {\n      ...animation.effect.getComputedTiming(),\n      delay: shouldPauseCursor ? cursorOptions.autoPauseDelay : 0\n    };\n  }\n  await wait2(async () => {\n    if (animation && shouldPauseCursor) {\n      animation.cancel();\n    }\n    await beforePaint(() => {\n      execute(queueItem);\n    });\n  }, queueItem.delay);\n  await rebuildCursorAnimation({\n    cursor,\n    options,\n    cursorOptions\n  });\n  return index;\n};\nlet processCursorOptions = (cursorOptions) => {\n  var _a, _b;\n  if (typeof cursorOptions === \"object\") {\n    let newOptions = {};\n    let { frames: defaultFrames, options: defaultOptions } = DEFAULT_OPTIONS.cursor.animation;\n    newOptions.animation = cursorOptions.animation || {};\n    newOptions.animation.frames = ((_a = cursorOptions.animation) == null ? void 0 : _a.frames) || defaultFrames;\n    newOptions.animation.options = merge(\n      defaultOptions,\n      ((_b = cursorOptions.animation) == null ? void 0 : _b.options) || {}\n    );\n    newOptions.autoPause = cursorOptions.autoPause ?? DEFAULT_OPTIONS.cursor.autoPause;\n    newOptions.autoPauseDelay = cursorOptions.autoPauseDelay || DEFAULT_OPTIONS.cursor.autoPauseDelay;\n    return newOptions;\n  }\n  if (cursorOptions === true) {\n    return DEFAULT_OPTIONS.cursor;\n  }\n  return cursorOptions;\n};\nconst TypeIt$1 = function(element, options = {}) {\n  let _wait = async (callback, delay, silent = false) => {\n    if (_statuses.frozen) {\n      await new Promise((resolve) => {\n        this.unfreeze = () => {\n          _statuses.frozen = false;\n          resolve();\n        };\n      });\n    }\n    silent || await _opts.beforeStep(this);\n    await wait(callback, delay, _timeouts);\n    silent || await _opts.afterStep(this);\n  };\n  let _fireItemWithContext = (index, queueItems) => {\n    return fireItem({\n      index,\n      queueItems,\n      wait: _wait,\n      cursor: _cursor,\n      cursorOptions: _opts.cursor\n    });\n  };\n  let _removeNode = (node) => removeNode(node, _element);\n  let _elementIsInput = () => isInput(_element);\n  let _getPace = (index = 0) => calculatePace(_opts)[index];\n  let _getAllChars = () => getAllChars(_element);\n  let _maybeAppendPause = (opts = {}) => {\n    let delay = opts.delay;\n    delay && _queue.add({ delay });\n  };\n  let _queueAndReturn = (steps, opts) => {\n    _queue.add(steps);\n    _maybeAppendPause(opts);\n    return this;\n  };\n  let _getDerivedCursorPosition = () => _predictedCursorPosition ?? _cursorPosition;\n  let _generateTemporaryOptionQueueItems = (newOptions = {}) => {\n    return [\n      { func: () => _options(newOptions) },\n      { func: () => _options(_opts) }\n    ];\n  };\n  let _addSplitPause = (items) => {\n    let delay = _opts.nextStringDelay;\n    _queue.add([{ delay: delay[0] }, ...items, { delay: delay[1] }]);\n  };\n  let _setUpCursor = () => {\n    if (_elementIsInput()) {\n      return;\n    }\n    let cursor = createElement(\"span\");\n    cursor.className = CURSOR_CLASS;\n    if (!_shouldRenderCursor) {\n      cursor.style.visibility = \"hidden\";\n      return cursor;\n    }\n    cursor.innerHTML = getParsedBody(_opts.cursorChar).innerHTML;\n    return cursor;\n  };\n  let _attachCursor = async () => {\n    !_elementIsInput() && _cursor && _element.appendChild(_cursor);\n    if (_shouldRenderCursor) {\n      setCursorStyles(_id, _element);\n      _cursor.dataset.tiAnimationId = _id;\n      let { animation } = _opts.cursor;\n      let { frames, options: options2 } = animation;\n      setCursorAnimation({\n        frames,\n        cursor: _cursor,\n        options: {\n          duration: _opts.cursorSpeed,\n          ...options2\n        }\n      });\n    }\n  };\n  let _generateQueue = () => {\n    let strings = _opts.strings.filter((string) => !!string);\n    strings.forEach((string, index) => {\n      this.type(string);\n      if (index + 1 === strings.length) {\n        return;\n      }\n      let splitItems = _opts.breakLines ? [{ func: () => _type(createElement(\"BR\")), typeable: true }] : duplicate(\n        {\n          func: _delete,\n          delay: _getPace(1)\n        },\n        _queue.getTypeable().length\n      );\n      _addSplitPause(splitItems);\n    });\n  };\n  let _prepLoop = async (delay) => {\n    let derivedCursorPosition = _getDerivedCursorPosition();\n    derivedCursorPosition && await _move({ value: derivedCursorPosition });\n    let queueItems = _getAllChars().map((c) => {\n      return [\n        Symbol(),\n        {\n          func: _delete,\n          delay: _getPace(1),\n          deletable: true,\n          shouldPauseCursor: () => true\n        }\n      ];\n    });\n    for (let index = 0; index < queueItems.length; index++) {\n      await _fireItemWithContext(index, queueItems);\n    }\n    _queue.reset();\n    _queue.set(0, { delay });\n  };\n  let _maybePrependHardcodedStrings = (strings) => {\n    let existingMarkup = _element.innerHTML;\n    if (!existingMarkup) {\n      return strings;\n    }\n    _element.innerHTML = \"\";\n    if (_opts.startDelete) {\n      _element.innerHTML = existingMarkup;\n      expandTextNodes(_element);\n      _addSplitPause(\n        duplicate(\n          {\n            func: _delete,\n            delay: _getPace(1),\n            deletable: true\n          },\n          _getAllChars().length\n        )\n      );\n      return strings;\n    }\n    let hardCodedStrings = existingMarkup.replace(/<!--(.+?)-->/g, \"\").trim().split(/<br(?:\\s*?)(?:\\/)?>/);\n    return hardCodedStrings.concat(strings);\n  };\n  let _fire = async (remember = true) => {\n    _statuses.started = true;\n    let cleanUp = (qKey) => {\n      _queue.done(qKey, !remember);\n    };\n    try {\n      let queueItems = [..._queue.getQueue()];\n      for (let index = 0; index < queueItems.length; index++) {\n        let [queueKey, queueItem] = queueItems[index];\n        if (queueItem.done)\n          continue;\n        if (!queueItem.deletable || queueItem.deletable && _getAllChars().length) {\n          let newIndex = await _fireItemWithContext(index, queueItems);\n          Array(newIndex - index).fill(index + 1).map((x, y) => x + y).forEach((i) => {\n            let [key] = queueItems[i];\n            cleanUp(key);\n          });\n          index = newIndex;\n        }\n        cleanUp(queueKey);\n      }\n      if (!remember) {\n        return this;\n      }\n      _statuses.completed = true;\n      await _opts.afterComplete(this);\n      if (!_opts.loop) {\n        throw \"\";\n      }\n      let delay = _opts.loopDelay;\n      _wait(async () => {\n        await _prepLoop(delay[0]);\n        _fire();\n      }, delay[1]);\n    } catch (e) {\n    }\n    return this;\n  };\n  let _move = async (step) => {\n    _cursorPosition = updateCursorPosition(\n      step,\n      _cursorPosition,\n      _getAllChars()\n    );\n    repositionCursor(_element, _getAllChars(), _cursorPosition);\n  };\n  let _type = (char) => insertIntoElement(_element, char);\n  let _options = async (opts) => _opts = merge(_opts, opts);\n  let _empty = async () => {\n    if (_elementIsInput()) {\n      _element.value = \"\";\n      return;\n    }\n    _getAllChars().forEach(_removeNode);\n    return;\n  };\n  let _delete = () => {\n    let allChars = _getAllChars();\n    if (!allChars.length)\n      return;\n    if (_elementIsInput()) {\n      _element.value = _element.value.slice(0, -1);\n    } else {\n      _removeNode(allChars[_cursorPosition]);\n    }\n  };\n  this.break = function(actionOpts) {\n    return _queueAndReturn(\n      {\n        func: () => _type(createElement(\"BR\")),\n        typeable: true\n      },\n      actionOpts\n    );\n  };\n  this.delete = function(numCharacters = null, actionOpts = {}) {\n    numCharacters = handleFunctionalArg(numCharacters);\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let num = numCharacters;\n    let { instant, to } = actionOpts;\n    let typeableQueueItems = _queue.getTypeable();\n    let rounds = (() => {\n      if (num === null) {\n        return typeableQueueItems.length;\n      }\n      if (isNumber(num)) {\n        return num;\n      }\n      return countStepsToSelector({\n        queueItems: typeableQueueItems,\n        selector: num,\n        cursorPosition: _getDerivedCursorPosition(),\n        to\n      });\n    })();\n    return _queueAndReturn(\n      [\n        bookEndQueueItems[0],\n        ...duplicate(\n          {\n            func: _delete,\n            delay: instant ? 0 : _getPace(1),\n            deletable: true\n          },\n          rounds\n        ),\n        bookEndQueueItems[1]\n      ],\n      actionOpts\n    );\n  };\n  this.empty = function(actionOpts = {}) {\n    return _queueAndReturn({ func: _empty }, actionOpts);\n  };\n  this.exec = function(func, actionOpts = {}) {\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    return _queueAndReturn(\n      [bookEndQueueItems[0], { func: () => func(this) }, bookEndQueueItems[1]],\n      actionOpts\n    );\n  };\n  this.move = function(movementArg, actionOpts = {}) {\n    movementArg = handleFunctionalArg(movementArg);\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let { instant, to } = actionOpts;\n    let numberOfSteps = countStepsToSelector({\n      queueItems: _queue.getTypeable(),\n      selector: movementArg === null ? \"\" : movementArg,\n      to,\n      cursorPosition: _getDerivedCursorPosition()\n    });\n    let directionalStep = numberOfSteps < 0 ? -1 : 1;\n    _predictedCursorPosition = _getDerivedCursorPosition() + numberOfSteps;\n    return _queueAndReturn(\n      [\n        bookEndQueueItems[0],\n        ...duplicate(\n          {\n            func: () => _move(directionalStep),\n            delay: instant ? 0 : _getPace(),\n            cursorable: true\n          },\n          Math.abs(numberOfSteps)\n        ),\n        bookEndQueueItems[1]\n      ],\n      actionOpts\n    );\n  };\n  this.options = function(opts, actionOpts = {}) {\n    opts = handleFunctionalArg(opts);\n    _options(opts);\n    return _queueAndReturn({}, actionOpts);\n  };\n  this.pause = function(milliseconds, actionOpts = {}) {\n    return _queueAndReturn(\n      { delay: handleFunctionalArg(milliseconds) },\n      actionOpts\n    );\n  };\n  this.type = function(string, actionOpts = {}) {\n    string = handleFunctionalArg(string);\n    let { instant } = actionOpts;\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let chars = maybeChunkStringAsHtml(string, _opts.html);\n    let charsAsQueueItems = chars.map((char) => {\n      return {\n        func: () => _type(char),\n        char,\n        delay: instant || isNonVoidElement(char) ? 0 : _getPace(),\n        typeable: char.nodeType === Node.TEXT_NODE\n      };\n    });\n    let itemsToQueue = [\n      bookEndQueueItems[0],\n      { func: async () => await _opts.beforeString(string, this) },\n      ...charsAsQueueItems,\n      { func: async () => await _opts.afterString(string, this) },\n      bookEndQueueItems[1]\n    ];\n    return _queueAndReturn(itemsToQueue, actionOpts);\n  };\n  this.is = function(key) {\n    return _statuses[key];\n  };\n  this.destroy = function(shouldRemoveCursor = true) {\n    _timeouts = destroyTimeouts(_timeouts);\n    handleFunctionalArg(shouldRemoveCursor) && _cursor && _removeNode(_cursor);\n    _statuses.destroyed = true;\n  };\n  this.freeze = function() {\n    _statuses.frozen = true;\n  };\n  this.unfreeze = () => {\n  };\n  this.reset = function(rebuild) {\n    !this.is(\"destroyed\") && this.destroy();\n    if (rebuild) {\n      _queue.wipe();\n      rebuild(this);\n    } else {\n      _queue.reset();\n    }\n    _cursorPosition = 0;\n    for (let property in _statuses) {\n      _statuses[property] = false;\n    }\n    _element[_elementIsInput() ? \"value\" : \"innerHTML\"] = \"\";\n    return this;\n  };\n  this.go = function() {\n    if (_statuses.started) {\n      return this;\n    }\n    _attachCursor();\n    if (!_opts.waitUntilVisible) {\n      _fire();\n      return this;\n    }\n    fireWhenVisible(_element, _fire.bind(this));\n    return this;\n  };\n  this.flush = function(cb = () => {\n  }) {\n    _attachCursor();\n    _fire(false).then(cb);\n    return this;\n  };\n  this.getQueue = () => _queue;\n  this.getOptions = () => _opts;\n  this.updateOptions = (options2) => _options(options2);\n  this.getElement = () => _element;\n  let _element = selectorToElement(element);\n  let _timeouts = [];\n  let _cursorPosition = 0;\n  let _predictedCursorPosition = null;\n  let _statuses = merge({}, DEFAULT_STATUSES);\n  options.cursor = processCursorOptions(\n    options.cursor ?? DEFAULT_OPTIONS.cursor\n  );\n  let _opts = merge(DEFAULT_OPTIONS, options);\n  _opts = merge(_opts, {\n    html: !_elementIsInput() && _opts.html,\n    nextStringDelay: calculateDelay(_opts.nextStringDelay),\n    loopDelay: calculateDelay(_opts.loopDelay)\n  });\n  let _id = generateHash();\n  let _queue = Queue([{ delay: _opts.startDelay }]);\n  _element.dataset.typeitId = _id;\n  appendStyleBlock(PLACEHOLDER_CSS);\n  let _shouldRenderCursor = !!_opts.cursor && !_elementIsInput();\n  let _cursor = _setUpCursor();\n  _opts.strings = _maybePrependHardcodedStrings(asArray(_opts.strings));\n  if (_opts.strings.length) {\n    _generateQueue();\n  }\n};\nconst defaultProps = {\n  as: \"span\",\n  options: {},\n  getBeforeInit: (instance) => instance,\n  getAfterInit: (instance) => instance\n};\nconst DynamicElementComponent = forwardRef((props, ref) => {\n  const { as: As } = props;\n  return /* @__PURE__ */ React.createElement(As, { ref, ...props });\n});\nconst TypeIt = (props) => {\n  const elementRef = useRef(null);\n  const instanceRef = useRef(null);\n  const { options, children, getBeforeInit, getAfterInit, ...remainingProps } = props;\n  const [shouldShowChildren, setShouldShowChildren] = useState(true);\n  const [instanceOptions, setInstanceOptions] = useState(null);\n  function calculateOptions() {\n    const optionsClone = Object.assign({}, options);\n    if (children && elementRef.current) {\n      optionsClone.strings = elementRef.current.innerHTML;\n    }\n    setInstanceOptions(optionsClone);\n  }\n  function generateNewInstance() {\n    instanceRef.current = new TypeIt$1(elementRef.current, instanceOptions);\n    instanceRef.current = getBeforeInit(instanceRef.current);\n    instanceRef.current.go();\n    instanceRef.current = getAfterInit(instanceRef.current);\n  }\n  useEffect(() => {\n    calculateOptions();\n    setShouldShowChildren(false);\n  }, [options]);\n  useEffect(() => {\n    var _a;\n    if (!instanceOptions)\n      return;\n    ((_a = instanceRef.current) == null ? void 0 : _a.updateOptions(instanceOptions)) || generateNewInstance();\n  }, [instanceOptions]);\n  useEffect(() => {\n    return () => {\n      var _a;\n      return (_a = instanceRef.current) == null ? void 0 : _a.destroy();\n    };\n  }, []);\n  return /* @__PURE__ */ React.createElement(\n    DynamicElementComponent,\n    {\n      ref: elementRef,\n      children: shouldShowChildren ? children : null,\n      style: { opacity: shouldShowChildren ? 0 : 1 },\n      ...remainingProps\n    }\n  );\n};\nTypeIt.defaultProps = defaultProps;\nexport {\n  TypeIt as default\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}